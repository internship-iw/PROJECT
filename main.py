import osimport argparseimport sysimport csvfrom glob import globfrom xlsxwriter.workbook import Workbookfrom pymongo import MongoClientdef mongodbtocsv(db,collection,fields,filename):    os.system('mongoexport --db '+db+' --collection '+collection+' --fields '+fields+' --out '+filename+'.csv')def mongodbtojson(db,collection,filename):    os.system('mongoexport --db '+db+' --collection '+collection+' --pretty --out '+filename+'.json')def mongodbtoxls(db,collection,fields,filename):    os.system('mongoexport --db ' + db + ' --collection ' + collection + ' --fields ' + fields + ' --out ' + filename + '.csv')    for csvfile in glob(filename+'.csv'):        name =filename        workbook = Workbook(str(name) + '.xlsx', {'strings_to_numbers': True, 'constant_memory': True})        worksheet = workbook.add_worksheet()        with open(csvfile, 'r') as f:            r = csv.reader(f)            for row_index, row in enumerate(r):                for col_index, data in enumerate(row):                    worksheet.write(row_index, col_index, data)        workbook.close()def export():    if args.format =="json":        return mongodbtojson(args.db,args.collection,args.filename)    elif args.format =="xls":        return mongodbtoxls(args.db,args.collection,args.fields,args.filename)    elif args.format =="csv":        return mongodbtocsv(args.db, args.collection, args.fields, args.filename)    else:        parse.print_help()client = MongoClient('localhost')parse = argparse.ArgumentParser()parse.add_argument('--db', type=str, default="local", help="enter your database name")parse.add_argument('--collection', type=str, default="\0", help="enter your collection name")parse.add_argument('--fields', type=str, default="\0", help="enter your fields name")parse.add_argument('--filename', type=str, default="\0", help="enter your filename")parse.add_argument('--format', type=str, default="\0", help="enter format you want")args = parse.parse_args()sys.stdout.write(str(export()))